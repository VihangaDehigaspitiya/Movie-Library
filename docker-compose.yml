version: '3.3'

services:
  mysql_server:
    image: mysql:5.7
    restart: always
    hostname: mysql
    environment:
      MYSQL_DATABASE: 'movie_library'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'secret'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'secret'

    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    networks:
      - app-connect
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - db-config:/etc/mysql
      - db-data:/var/lib/mysql
      - ./db/backup/files/:/data_backup/data
# Names our volume


  movie-library-api:
    depends_on:
      - mysql_server
    build:
#      context: .
      dockerfile: ./Backend/Dockerfile
    image: movie-library-app
    networks:
      - app-connect
    stdin_open: true
    tty: true
    ports:
      - "8042:8042"
    environment:
      WAIT_HOSTS: mysql:3306

  movie-library-frontend:
    depends_on:
      - mysql_server
      - movie-library-api
    build:
#      context: .
      dockerfile: ./Frontend/Dockerfile
    image: movie-library-frontend
    networks:
      - app-connect
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"

  redis:
    image: "redis:alpine"

    ports:
      - "6379:6379"

volumes:
  db-config:
  db-data:
networks:
  app-connect:
    driver: bridge
#
#volumes:
#  my-db:
#
#networks:
#  backend:
